# Generated by Django 2.2.3 on 2019-08-21 04:19

import accounts.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('address_type', models.CharField(choices=[('home', 'home'), ('billing', 'billing'), ('studio', 'studio')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('sunday', 'sunday'), ('monday', 'monday'), ('tuesday', 'tuesday'), ('wednesday', 'wednesday'), ('thursday', 'thursday'), ('friday', 'friday'), ('saturday', 'saturday')], max_length=10)),
                ('schedule', models.CharField(choices=[('8AM-10AM', '8AM-10AM'), ('10AM-12PM', '10AM-12PM'), ('12PM-3PM', '12PM-3PM'), ('3PM-6PM', '3PM-6PM')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(blank=True, max_length=200, null=True)),
                ('graduation_year', models.IntegerField(blank=True, null=True)),
                ('degree_type', models.CharField(blank=True, choices=[('associate', 'Associate Degree'), ('bachelors', "Bachelor's Degree"), ('graduate', 'Graduate Degreee'), ('professional', 'Professional Degree'), ('certification', 'Certification'), ('other', 'Other')], max_length=100, null=True)),
                ('field_of_study', models.CharField(blank=True, max_length=100, null=True)),
                ('school_location', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employer', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('job_location', models.CharField(blank=True, max_length=100, null=True)),
                ('from_month', models.CharField(blank=True, choices=[('january', 'january'), ('february', 'february'), ('march', 'march'), ('april', 'april'), ('may', 'may'), ('june', 'june'), ('july', 'july'), ('august', 'august'), ('september', 'september'), ('october', 'october'), ('november', 'november'), ('december', 'december')], max_length=100, null=True)),
                ('from_year', models.IntegerField(blank=True, null=True)),
                ('to_month', models.CharField(blank=True, choices=[('january', 'january'), ('february', 'february'), ('march', 'march'), ('april', 'april'), ('may', 'may'), ('june', 'june'), ('july', 'july'), ('august', 'august'), ('september', 'september'), ('october', 'october'), ('november', 'november'), ('december', 'december')], max_length=100, null=True)),
                ('to_year', models.IntegerField(blank=True, null=True)),
                ('still_work_here', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'female'), ('male', 'male')], max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.avatar_directory_path)),
                ('hear_about_us', models.CharField(blank=True, choices=[('Google', 'Google'), ('Facebook', 'Facebook')], max_length=100, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('bio_title', models.CharField(blank=True, max_length=250, null=True)),
                ('bio_description', models.TextField(blank=True, null=True)),
                ('social_media_accounts', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, null=True, size=None)),
                ('music', models.TextField(blank=True, null=True)),
                ('job_preferences', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('qualifications', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('place_lessons_preferences', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('rates', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('request_posted', models.BooleanField(default=False)),
                ('student_booked_lesson', models.BooleanField(default=False)),
                ('payment_receipts', models.BooleanField(default=False)),
                ('news_updates', models.BooleanField(default=False)),
                ('offers', models.BooleanField(default=False)),
                ('disclosure_accepted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstructorInstruments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.CharField(blank=True, choices=[('basic', 'basic'), ('advanced', 'advanced')], max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'female'), ('male', 'male')], max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.avatar_directory_path)),
                ('hear_about_us', models.CharField(blank=True, choices=[('Google', 'Google'), ('Facebook', 'Facebook')], max_length=100, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('application_received', models.BooleanField(default=False)),
                ('lesson_taught_confirmed', models.BooleanField(default=False)),
                ('payment_receipts', models.BooleanField(default=False)),
                ('news_updates', models.BooleanField(default=False)),
                ('offers', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_type', models.CharField(choices=[('main', 'main'), ('mobile', 'mobile')], max_length=100)),
                ('phone_verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'female'), ('male', 'male')], max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.avatar_directory_path)),
                ('hear_about_us', models.CharField(blank=True, choices=[('Google', 'Google'), ('Facebook', 'Facebook')], max_length=100, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='accounts.Parent')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
